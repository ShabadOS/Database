version: 2
jobs:
  build-sqlite:
    docker:
      - image: circleci/node:10.13
    steps:
      - checkout
      - run: npm ci
      - run:
          name: Build database
          command: npm run build-sqlite
      - store_artifacts:
          path: build/database.sqlite
      - add_ssh_keys:
          fingerprints:
            - "e5:71:50:86:4f:6c:3e:f6:8b:f2:d5:45:ec:f0:9a:f1"
      - run:
          name: Run tests
          command: npm run test
      - deploy:
          name: Release database on Github
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              # Write npm token to .npmrc
              echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

              # Configure git
              git config --global push.default current
              git config --global user.email "team@shabados.com"
              git config --global user.name "ShabadOS Bot"

              # Run Release script
              chmod +x release.sh
              echo "Releasing on Github"

              npm run release
            fi

  build-mariadb:
    docker:
      - image: circleci/node:10.13
    steps:
      - setup_remote_docker
      # Fetch the source code
      - checkout
      - run: 
          name: Bump image version
          command: |
            chmod +x bump-version.sh
            ./bump-version.sh
      - run: sudo apt-get install jq
      - run: 
          name: Set version numbers
          command: |
            echo "export VERSION=$(jq -r .version package.json)" >> $BASH_ENV
            echp "export SEMVER=(${VERSION//./ })" >> $BASH_ENV
            echo 'export MAJOR="${SEMVER[0]}"' >> $BASH_ENV
            echo 'export MINOR="${SEMVER[1]}"' >> $BASH_ENV
            echo 'export PATCH="${SEMVER[2]}"' >> $BASH_ENV
      - run:
          name: Build database image
          command: |
            echo -e ${VERSION}
            echo -e ${MAJOR}.${MINOR}.${PATCH}
            docker build -f docker/mariadb/Dockerfile -t shabados/database:${MAJOR}-mariadb -t shabados/database:${MAJOR}.${MINOR}-mariadb -t shabados/database:${VERSION}-mariadb .
      - deploy:
          name: Release database image on DockerHub
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then

              # Log in to Docker Hub
              docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}

              # Push full, major, minor-minor images
              docker push shabados/database:${VERSION}-mariadb
              docker push shabados/database:${MAJOR}-mariadb
              docker push shabados/database:${MAJOR}.${MINOR}-mariadb
            fi

workflows:
  version: 2
  build_all:
    jobs:
      - build-sqlite
      - build-mariadb